struct OurVertexShaderOutput {
@builtin(position) position: vec4f,
@location(0) texcoord: vec2f,
};

struct ImgIndex {
i: vec2f,
};


@vertex fn vs(
@builtin(vertex_index) vertexIndex : u32
) -> OurVertexShaderOutput {
let pos = array(
    // 1st triangle
    vec2f( 0.0,  0.0),  // center
    vec2f( 1.0,  0.0),  // right, center
    vec2f( 0.0,  1.0),  // center, top

    // 2st triangle
    vec2f( 0.0,  1.0),  // center, top
    vec2f( 1.0,  0.0),  // right, center
    vec2f( 1.0,  1.0),  // right, top

);

var vsOutput: OurVertexShaderOutput;

var xy = pos[vertexIndex];
var position = vec4f(xy*2-1, 0, 1);
vsOutput.position = position;
vsOutput.texcoord = xy;
return vsOutput;
}





@fragment fn fs(fsInput: OurVertexShaderOutput) -> @location(0) vec4f {
var texcoord = vec4(fsInput.texcoord,0,1);


var tex1 = vec4f(1,0,1,1);

return (tex1);


}